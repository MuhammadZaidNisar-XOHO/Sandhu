{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/react-dragdrop/src/Components/FinishEnvironment/index.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { FinishEnvironmentAction } from \"../FinishEnvironment/actions\";\nimport \"./style.css\";\n\nclass FinishEnvironment extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const _this$props = this.props,\n          AngularReducer = _this$props.AngularReducer,\n          ReactReducer = _this$props.ReactReducer,\n          VueReducer = _this$props.VueReducer;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Summary\",\n      className: \"customAnchor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.props.onFinishEnvironment(AngularReducer, ReactReducer, VueReducer),\n      variant: \"contained\",\n      color: \"secondary\",\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Finish\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  AngularReducer: state.AngularReducer.AngularResponse,\n  ReactReducer: state.ReactReducer.ReactResponse,\n  VueReducer: state.VueReducer.VueResponse\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFinishEnvironment: (AngularReducer, ReactReducer, VueReducer) => dispatch(FinishEnvironmentAction(AngularReducer, ReactReducer, VueReducer))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinishEnvironment);","map":{"version":3,"sources":["/home/dell/Desktop/react-dragdrop/src/Components/FinishEnvironment/index.js"],"names":["React","connect","Link","Button","FinishEnvironmentAction","FinishEnvironment","Component","constructor","props","render","AngularReducer","ReactReducer","VueReducer","onFinishEnvironment","mapStateToProps","state","AngularResponse","ReactResponse","VueResponse","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,uBAAT,QAAwC,8BAAxC;AACA,OAAO,aAAP;;AAEA,MAAMC,iBAAN,SAAgCL,KAAK,CAACM,SAAtC,CAAgD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAC8C,KAAKD,KADnD;AAAA,UACCE,cADD,eACCA,cADD;AAAA,UACiBC,YADjB,eACiBA,YADjB;AAAA,UAC+BC,UAD/B,eAC+BA,UAD/B;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,UAAV;AAAsB,MAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,MACP,KAAKJ,KAAL,CAAWK,mBAAX,CACEH,cADF,EAEEC,YAFF,EAGEC,UAHF,CAFJ;AAQE,MAAA,OAAO,EAAC,WARV;AASE,MAAA,KAAK,EAAC,WATR;AAUE,MAAA,IAAI,EAAC,QAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,CADF;AAoBD;;AA3B6C;;AA8BhD,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,cAAc,EAAEK,KAAK,CAACL,cAAN,CAAqBM,eADL;AAEhCL,EAAAA,YAAY,EAAEI,KAAK,CAACJ,YAAN,CAAmBM,aAFD;AAGhCL,EAAAA,UAAU,EAAEG,KAAK,CAACH,UAAN,CAAiBM;AAHG,CAAL,CAA7B;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLP,IAAAA,mBAAmB,EAAE,CAACH,cAAD,EAAiBC,YAAjB,EAA+BC,UAA/B,KACnBQ,QAAQ,CACNhB,uBAAuB,CAACM,cAAD,EAAiBC,YAAjB,EAA+BC,UAA/B,CADjB;AAFL,GAAP;AAMD,CAPD;;AAQA,eAAeX,OAAO,CAACa,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cd,iBAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { FinishEnvironmentAction } from \"../FinishEnvironment/actions\";\nimport \"./style.css\";\n\nclass FinishEnvironment extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { AngularReducer, ReactReducer, VueReducer } = this.props;\n    return (\n      <div>\n        <Link to={\"/Summary\"} className=\"customAnchor\">\n          <Button\n            onClick={() =>\n              this.props.onFinishEnvironment(\n                AngularReducer,\n                ReactReducer,\n                VueReducer\n              )\n            }\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"medium\"\n          >\n            Finish\n          </Button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  AngularReducer: state.AngularReducer.AngularResponse,\n  ReactReducer: state.ReactReducer.ReactResponse,\n  VueReducer: state.VueReducer.VueResponse\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFinishEnvironment: (AngularReducer, ReactReducer, VueReducer) =>\n      dispatch(\n        FinishEnvironmentAction(AngularReducer, ReactReducer, VueReducer)\n      )\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FinishEnvironment);\n"]},"metadata":{},"sourceType":"module"}